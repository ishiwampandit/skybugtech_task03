 import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class Account {
    private String accountNumber;
    private String pin;
    private double balance;

    public Account(String accountNumber, String pin, double balance) {
        this.accountNumber = accountNumber;
        this.pin = pin;
        this.balance = balance;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public String getPin() {
        return pin;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        balance += amount;
    }

    public boolean withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            return true;
        } else {
            System.out.println("Insufficient funds");
            return false;
        }
    }
}
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Scanner;
 class ATM01 {
    private Map<String, Account> accounts;
    private String currentAccountNumber;

    public ATM01() {
        accounts = new HashMap<>();
        // Add some dummy accounts for testing
        accounts.put("123456", new Account("123456", "1234", 1000.0));
        accounts.put("789012", new Account("789012", "5678", 500.0));
    }

    public void displayMenu() {
        System.out.println("1. Check Balance");
        System.out.println("2. Deposit");
        System.out.println("3. Withdraw");
        System.out.println("4. Exit");
    }

    public void authenticate() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.nextLine();
        System.out.print("Enter PIN: ");
        String pin = scanner.nextLine();

        Account account = accounts.get(accountNumber);
        if (account != null && account.getPin().equals(pin)) {
            currentAccountNumber = accountNumber;
            showMainMenu();
        } else {
            System.out.println("Invalid Account Number or PIN");
        }
    }

    public void showMainMenu() {
        int choice;
        Scanner scanner = new Scanner(System.in);

        do {
            displayMenu();
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    checkBalance();
                    break;
                case 2:
                    deposit();
                    break;
                case 3:
                    withdraw();
                    break;
                case 4:
                    System.out.println("thanking for coming indicash ATM !...bye");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        } while (choice != 4);
    }

    public void checkBalance() {
        Account account = accounts.get(currentAccountNumber); public class ATMProject {
    public static void main(String[] args) {
        ATM01 atm = new ATM01();
        atm.authenticate();
    }
}
        System.out.println("Balance: $" + account.getBalance());
    }

    public void deposit() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter deposit amount: $");
        double amount = scanner.nextDouble();

        Account account = accounts.get(currentAccountNumber);
        account.deposit(amount);
        System.out.println("Deposit successful. New balance: $" + account.getBalance());
    }

    public void withdraw() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter withdrawal amount: $");
        double amount = scanner.nextDouble();

        Account account = accounts.get(currentAccountNumber);
        if (account.withdraw(amount)) {
            System.out.println("Withdrawal successful. New balance: $" + account.getBalance());
        }
    }
}
 public class ATMProject {
    public static void main(String[] args) {
        ATM01 atm = new ATM01();
        atm.authenticate();
    }
}
